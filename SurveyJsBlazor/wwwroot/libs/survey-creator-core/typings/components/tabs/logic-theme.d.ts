export declare var logicCss: {
    root: string;
    container: string;
    header: string;
    body: string;
    bodyEmpty: string;
    footer: string;
    title: string;
    description: string;
    logo: string;
    logoImage: string;
    headerText: string;
    navigationButton: string;
    completedPage: string;
    navigation: {
        complete: string;
        prev: string;
        next: string;
        start: string;
        preview: string;
        edit: string;
    };
    panel: {
        title: string;
        titleExpandable: string;
        titleOnExpand: string;
        titleOnError: string;
        description: string;
        container: string;
        content: string;
        icon: string;
        iconExpanded: string;
        footer: string;
        requiredText: string;
    };
    paneldynamic: {
        mainRoot: string;
        root: string;
        navigation: string;
        title: string;
        button: string;
        buttonRemove: string;
        buttonAdd: string;
        progressTop: string;
        progressBottom: string;
        buttonPrev: string;
        buttonNext: string;
        progressContainer: string;
        progress: string;
        progressBar: string;
        progressText: string;
        separator: string;
        panelWrapper: string;
        panelWrapperInRow: string;
    };
    progress: string;
    progressBar: string;
    progressText: string;
    progressTextInBar: string;
    page: {
        root: string;
        title: string;
        description: string;
    };
    pageTitle: string;
    pageDescription: string;
    row: string;
    rowMultiple: string;
    question: {
        mainRoot: string;
        flowRoot: string;
        asCell: string;
        header: string;
        headerLeft: string;
        headerTop: string;
        headerBottom: string;
        content: string;
        contentLeft: string;
        titleLeftRoot: string;
        titleOnAnswer: string;
        titleOnError: string;
        title: string;
        requiredText: string;
        number: string;
        description: string;
        descriptionUnderInput: string;
        comment: string;
        required: string;
        titleRequired: string;
        indent: number;
        footer: string;
        formGroup: string;
        hasError: string;
        disabled: string;
    };
    image: {
        root: string;
    };
    error: {
        root: string;
        icon: string;
        item: string;
        locationTop: string;
        locationBottom: string;
    };
    checkbox: {
        root: string;
        item: string;
        itemSelectAll: string;
        itemNone: string;
        itemDisabled: string;
        itemChecked: string;
        itemHover: string;
        itemInline: string;
        label: string;
        labelChecked: string;
        itemControl: string;
        itemDecorator: string;
        controlLabel: string;
        materialDecorator: string;
        other: string;
        column: string;
    };
    radiogroup: {
        root: string;
        item: string;
        itemInline: string;
        label: string;
        labelChecked: string;
        itemDisabled: string;
        itemChecked: string;
        itemHover: string;
        itemControl: string;
        itemDecorator: string;
        controlLabel: string;
        materialDecorator: string;
        other: string;
        clearButton: string;
        column: string;
    };
    boolean: {
        mainRoot: string;
        root: string;
        item: string;
        control: string;
        itemChecked: string;
        itemIndeterminate: string;
        itemDisabled: string;
        label: string;
        switch: string;
        disabledLabel: string;
        itemDecorator: string;
        materialDecorator: string;
        sliderText: string;
        slider: string;
    };
    text: {
        root: string;
        small: string;
        controlDisabled: string;
        onError: string;
    };
    multipletext: {
        root: string;
        item: string;
        itemTitle: string;
        row: string;
        cell: string;
    };
    dropdown: {
        root: string;
        popup: string;
        small: string;
        control: string;
        selectWrapper: string;
        other: string;
        onError: string;
        label: string;
        item: string;
        itemDisabled: string;
        itemChecked: string;
        itemHover: string;
        itemControl: string;
        itemDecorator: string;
        controlDisabled: string;
        controlLabel: string;
        materialDecorator: string;
        controlValue: string;
        chevronButton: string;
        chevronButtonSvg: string;
        chevronButtonIconId: string;
    };
    imagepicker: {
        root: string;
        item: string;
        itemInline: string;
        itemChecked: string;
        itemDisabled: string;
        itemHover: string;
        label: string;
        itemControl: string;
        image: string;
        itemText: string;
        clearButton: string;
        other: string;
    };
    matrix: {
        mainRoot: string;
        tableWrapper: string;
        root: string;
        row: string;
        rowAdditional: string;
        rowError: string;
        cell: string;
        headerCell: string;
        label: string;
        itemValue: string;
        itemChecked: string;
        itemDisabled: string;
        itemHover: string;
        materialDecorator: string;
        itemDecorator: string;
        cellText: string;
        cellTextSelected: string;
        cellTextDisabled: string;
    };
    matrixdropdown: {
        tableWrapper: string;
        mainRoot: string;
        root: string;
        row: string;
        rowAdditional: string;
        cell: string;
        headerCell: string;
    };
    matrixdynamic: {
        tableWrapper: string;
        mainRoot: string;
        root: string;
        noHeader: string;
        row: string;
        rowAdditional: string;
        cell: string;
        headerCell: string;
        button: string;
        detailRow: string;
        detailButton: string;
        detailButtonExpanded: string;
        detailIcon: string;
        detailIconExpanded: string;
        detailPanelCell: string;
        actionsCell: string;
        buttonAdd: string;
        buttonRemove: string;
        iconAdd: string;
        iconRemove: string;
    };
    rating: {
        root: string;
        item: string;
        itemHover: string;
        selected: string;
        minText: string;
        itemText: string;
        maxText: string;
        itemDisabled: string;
    };
    comment: {
        mainRoot: string;
        root: string;
        small: string;
    };
    expression: string;
    file: {
        root: string;
        other: string;
        placeholderInput: string;
        preview: string;
        fileSign: string;
        fileSignBottom: string;
        fileDecorator: string;
        fileInput: string;
        noFileChosen: string;
        chooseFile: string;
        disabled: string;
        removeButton: string;
        removeButtonBottom: string;
        removeFile: string;
        removeFileSvg: string;
        wrapper: string;
    };
    signaturepad: {
        root: string;
        small: string;
        controls: string;
        placeholder: string;
        clearButton: string;
    };
    saveData: {
        root: string;
        saving: string;
        error: string;
        success: string;
        saveAgainButton: string;
    };
    window: {
        root: string;
        body: string;
        header: {
            root: string;
            title: string;
            button: string;
            buttonExpanded: string;
            buttonCollapsed: string;
        };
    };
    list: {
        root: string;
        itemBody: string;
    };
    embeddedsurvey: {
        mainRoot: string;
    };
    actionBar: {
        root: string;
        defaultSizeMode: string;
        smallSizeMode: string;
        item: string;
        itemWithTitle: string;
        itemAsIcon: string;
        itemActive: string;
        itemPressed: string;
        itemIcon: string;
        itemTitle: string;
        itemTitleWithIcon: string;
    };
};
