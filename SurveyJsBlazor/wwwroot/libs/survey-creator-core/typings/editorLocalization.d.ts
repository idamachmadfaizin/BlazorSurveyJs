export declare class EditorLocalization {
    camelCaseBreaking: boolean;
    currentLocale: string;
    locales: {};
    private peByClass;
    private peHelpByClass;
    reset(): void;
    getString(strName: string, locale?: string): string;
    hasString(strName: string, locale?: string): boolean;
    private getStringByLocale;
    getLocaleName(loc: string, defaultLocale?: string): string;
    getPropertyName(strName: string, defaultName?: string): string;
    getPropertyTitle(strName: string): string;
    getPropertyNameInEditor(typeName: string, propName: string, defaultName?: string): string;
    getPropertyHelpInEditor(typeName: string, propName: string, propType?: string): string;
    private getPropertyInfoInEditorByType;
    private getObjInEditorByType;
    getProperty(strName: string, defaultName?: string): string;
    convertToCamelCase(value: string, toLowCase?: boolean): string;
    private getAutoPropertyName;
    getPropertyValueInEditor(propName: string, value: any): string;
    getPropertyValue(value: any, locale?: string): string;
    getValidatorName(name: string, locale?: string): string;
    getTriggerName(name: string, locale?: string): string;
    getLocale(locale?: string): any;
    private getValueInternal;
    getLocales(): Array<string>;
    private stringsDiff;
}
export declare var editorLocalization: EditorLocalization;
export declare function getLocString(strName: string, locale?: string): string;
export declare var defaultStrings: {
    survey: {
        edit: string;
        externalHelpLink: string;
        externalHelpLinkUrl: string;
        dropQuestion: string;
        addLogicItem: string;
        copy: string;
        duplicate: string;
        addToToolbox: string;
        deletePanel: string;
        deleteQuestion: string;
        convertTo: string;
        drag: string;
        license: string;
    };
    qt: {
        default: string;
        checkbox: string;
        comment: string;
        imagepicker: string;
        ranking: string;
        image: string;
        dropdown: string;
        tagbox: string;
        file: string;
        html: string;
        matrix: string;
        matrixdropdown: string;
        matrixdynamic: string;
        multipletext: string;
        panel: string;
        paneldynamic: string;
        radiogroup: string;
        rating: string;
        text: string;
        boolean: string;
        expression: string;
        signaturepad: string;
        buttongroup: string;
    };
    ed: {
        defaultLocale: string;
        survey: string;
        settings: string;
        settingsTooltip: string;
        surveySettings: string;
        surveySettingsTooltip: string;
        themeSettings: string;
        themeSettingsTooltip: string;
        showPanel: string;
        hidePanel: string;
        prevSelected: string;
        nextSelected: string;
        surveyTypeName: string;
        pageTypeName: string;
        panelTypeName: string;
        questionTypeName: string;
        columnTypeName: string;
        addNewPage: string;
        moveRight: string;
        moveLeft: string;
        deletePage: string;
        editPage: string;
        edit: string;
        newPageName: string;
        newQuestionName: string;
        newPanelName: string;
        newTextItemName: string;
        testSurvey: string;
        themeSurvey: string;
        defaultV2Theme: string;
        modernTheme: string;
        defaultTheme: string;
        testSurveyAgain: string;
        testSurveyWidth: string;
        navigateToMsg: string;
        logic: string;
        embedSurvey: string;
        translation: string;
        saveSurvey: string;
        saveSurveyTooltip: string;
        saveTheme: string;
        saveThemeTooltip: string;
        designer: string;
        jsonEditor: string;
        jsonHideErrors: string;
        jsonShowErrors: string;
        undo: string;
        redo: string;
        undoTooltip: string;
        redoTooltip: string;
        showMoreChoices: string;
        showLessChoices: string;
        copy: string;
        cut: string;
        paste: string;
        copyTooltip: string;
        cutTooltip: string;
        pasteTooltip: string;
        options: string;
        generateValidJSON: string;
        generateReadableJSON: string;
        toolbox: string;
        "property-grid": string;
        propertyGridFilteredTextPlaceholder: string;
        toolboxGeneralCategory: string;
        toolboxChoiceCategory: string;
        toolboxTextCategory: string;
        toolboxContainersCategory: string;
        toolboxMatrixCategory: string;
        toolboxMiscCategory: string;
        correctJSON: string;
        surveyResults: string;
        surveyResultsTable: string;
        surveyResultsJson: string;
        resultsTitle: string;
        resultsName: string;
        resultsValue: string;
        resultsDisplayValue: string;
        modified: string;
        saving: string;
        saved: string;
        propertyEditorError: string;
        saveError: string;
        translationPropertyGridTitle: string;
        themePropertyGridTitle: string;
        translationLanguages: string;
        translationDeleteLanguage: string;
        translationAddLanguage: string;
        translationShowAllStrings: string;
        translationShowUsedStringsOnly: string;
        translationShowAllPages: string;
        translationNoStrings: string;
        translationExportToSCVButton: string;
        translationImportFromSCVButton: string;
        translateUsigAI: string;
        translationDialogTitle: string;
        translationMergeLocaleWithDefault: string;
        translationPlaceHolder: string;
        themeExportButton: string;
        themeImportButton: string;
        surveyJsonExportButton: string;
        surveyJsonImportButton: string;
        surveyJsonCopyButton: string;
        themeResetButton: string;
        themeResetConfirmation: string;
        themeResetConfirmationOk: string;
        bold: string;
        italic: string;
        underline: string;
        addNewQuestion: string;
        selectPage: string;
        carryForwardChoicesCopied: string;
        htmlPlaceHolder: string;
        panelPlaceHolder: string;
        surveyPlaceHolder: string;
        imagePlaceHolder: string;
        imageChooseImage: string;
        addNewTypeQuestion: string;
        chooseLogoPlaceholder: string;
        auto: string;
        choices_Item: string;
        lg: {
            addNewItem: string;
            empty_tab: string;
            page_visibilityName: string;
            page_enableName: string;
            panel_visibilityName: string;
            panel_enableName: string;
            question_visibilityName: string;
            question_enableName: string;
            question_requireName: string;
            question_resetValueName: string;
            question_setValueName: string;
            column_visibilityName: string;
            column_enableName: string;
            column_requireName: string;
            column_resetValueName: string;
            column_setValueName: string;
            trigger_completeName: string;
            trigger_setvalueName: string;
            trigger_copyvalueName: string;
            trigger_skipName: string;
            trigger_runExpressionName: string;
            completedHtmlOnConditionName: string;
            page_visibilityDescription: string;
            panel_visibilityDescription: string;
            panel_enableDescription: string;
            question_visibilityDescription: string;
            question_enableDescription: string;
            question_requireDescription: string;
            trigger_completeDescription: string;
            trigger_setvalueDescription: string;
            trigger_copyvalueDescription: string;
            trigger_skipDescription: string;
            trigger_runExpressionDescription: string;
            completedHtmlOnConditionDescription: string;
            itemExpressionText: string;
            itemEmptyExpressionText: string;
            page_visibilityText: string;
            panel_visibilityText: string;
            panel_enableText: string;
            question_visibilityText: string;
            question_enableText: string;
            question_requireText: string;
            question_resetValueText: string;
            question_setValueText: string;
            column_visibilityText: string;
            column_enableText: string;
            column_requireText: string;
            column_resetValueText: string;
            column_setValueText: string;
            setValueExpressionPlaceholder: string;
            trigger_completeText: string;
            trigger_setvalueText: string;
            trigger_setvalueEmptyText: string;
            trigger_copyvalueText: string;
            trigger_skipText: string;
            trigger_runExpressionText1: string;
            trigger_runExpressionText2: string;
            completedHtmlOnConditionText: string;
            showAllQuestions: string;
            showAllActionTypes: string;
            conditions: string;
            actions: string;
            expressionEditorTitle: string;
            actionsEditorTitle: string;
            deleteAction: string;
            addNewAction: string;
            selectedActionCaption: string;
            expressionInvalid: string;
            noActionError: string;
            actionInvalid: string;
            uncompletedRule_title: string;
            uncompletedRule_text: string;
            uncompletedRule_apply: string;
            uncompletedRule_cancel: string;
            expressionSetup: string;
            actionsSetup: string;
        };
    };
    pe: {
        apply: string;
        ok: string;
        save: string;
        clear: string;
        saveTooltip: string;
        cancel: string;
        set: string;
        reset: string;
        change: string;
        refresh: string;
        close: string;
        delete: string;
        add: string;
        addNew: string;
        addItem: string;
        removeItem: string;
        dragItem: string;
        addOther: string;
        addSelectAll: string;
        addNone: string;
        removeAll: string;
        edit: string;
        back: string;
        backTooltip: string;
        saveAndBack: string;
        saveAndBackTooltip: string;
        doneEditing: string;
        editChoices: string;
        showChoices: string;
        move: string;
        empty: string;
        emptyValue: string;
        fastEntry: string;
        fastEntryNonUniqueError: string;
        fastEntryChoicesCountError: string;
        fastEntryChoicesMinCountError: string;
        fastEntryPlaceholder: string;
        formEntry: string;
        testService: string;
        itemSelectorEmpty: string;
        conditionActionEmpty: string;
        conditionSelectQuestion: string;
        conditionSelectPage: string;
        conditionSelectPanel: string;
        conditionValueQuestionTitle: string;
        expressionHelp: string;
        aceEditorHelp: string;
        aceEditorRowTitle: string;
        aceEditorPanelTitle: string;
        showMore: string;
        assistantTitle: string;
        cellsEmptyRowsColumns: string;
        showPreviewBeforeComplete: string;
        overridingPropertyPrefix: string;
        resetToDefaultCaption: string;
        propertyIsEmpty: string;
        propertyIsNoUnique: string;
        propertyNameIsNotUnique: string;
        propertyNameIsIncorrect: string;
        listIsEmpty: string;
        "listIsEmpty@choices": string;
        "addNew@choices": string;
        expressionIsEmpty: string;
        value: string;
        text: string;
        rowid: string;
        imageLink: string;
        columnEdit: string;
        itemEdit: string;
        url: string;
        path: string;
        valueName: string;
        choicesbyurl: {
            valueName: string;
        };
        titleName: string;
        imageLinkName: string;
        allowEmptyResponse: string;
        titlePlaceholder: string;
        surveyTitlePlaceholder: string;
        pageTitlePlaceholder: string;
        descriptionPlaceholder: string;
        surveyDescriptionPlaceholder: string;
        pageDescriptionPlaceholder: string;
        showOtherItem: string;
        otherText: string;
        showNoneItem: string;
        noneText: string;
        showSelectAllItem: string;
        selectAllText: string;
        choicesMin: string;
        choicesMax: string;
        choicesStep: string;
        name: string;
        title: string;
        cellType: string;
        colCount: string;
        choicesOrder: string;
        visible: string;
        isRequired: string;
        markRequired: string;
        removeRequiredMark: string;
        isAllRowRequired: string;
        requiredErrorText: string;
        startWithNewLine: string;
        rows: string;
        cols: string;
        placeholder: string;
        showPreview: string;
        storeDataAsText: string;
        maxSize: string;
        imageHeight: string;
        imageWidth: string;
        rowCount: string;
        columnLayout: string;
        addRowLocation: string;
        addRowText: string;
        removeRowText: string;
        rateMin: string;
        rateMax: string;
        rateStep: string;
        minRateDescription: string;
        maxRateDescription: string;
        inputType: string;
        optionsCaption: string;
        defaultValue: string;
        cellsDefaultRow: string;
        surveyEditorTitle: string;
        qEditorTitle: string;
        maxLength: string;
        buildExpression: string;
        editExpression: string;
        and: string;
        or: string;
        remove: string;
        addCondition: string;
        emptyLogicPopupMessage: string;
        if: string;
        then: string;
        setToName: string;
        fromName: string;
        gotoName: string;
        ruleIsNotSet: string;
        includeIntoResult: string;
        showTitle: string;
        expandCollapseTitle: string;
        locale: string;
        simulator: string;
        landscapeOrientation: string;
        portraitOrientation: string;
        mode: string;
        clearInvisibleValues: string;
        cookieName: string;
        sendResultOnPageNext: string;
        storeOthersAsComment: string;
        showPageTitles: string;
        showPageNumbers: string;
        pagePrevText: string;
        pageNextText: string;
        completeText: string;
        previewText: string;
        editText: string;
        startSurveyText: string;
        showNavigationButtons: string;
        showPrevButton: string;
        firstPageIsStarted: string;
        showCompletedPage: string;
        goNextPageAutomatic: string;
        showProgressBar: string;
        questionTitleLocation: string;
        requiredText: string;
        questionStartIndex: string;
        showQuestionNumbers: string;
        questionTitleTemplate: string;
        questionErrorLocation: string;
        focusFirstQuestionAutomatic: string;
        questionsOrder: string;
        maxTimeToFinish: string;
        maxTimeToFinishPage: string;
        image: {
            imageHeight: string;
            imageWidth: string;
        };
        survey: {
            title: string;
        };
        page: {
            title: string;
            maxTimeToFinish: string;
        };
        question: {
            page: string;
        };
        showTimerPanel: string;
        showTimerPanelMode: string;
        renderMode: string;
        allowAddPanel: string;
        allowRemovePanel: string;
        noEntriesText: string;
        panelAddText: string;
        panelRemoveText: string;
        isSinglePage: string;
        html: string;
        expression: string;
        setValue: string;
        dataFormat: string;
        allowAddRows: string;
        allowRemoveRows: string;
        allowRowsDragAndDrop: string;
        responsiveImageSizeHelp: string;
        minImageWidth: string;
        maxImageWidth: string;
        minImageHeight: string;
        maxImageHeight: string;
        minValue: string;
        maxValue: string;
        minLength: string;
        allowDigits: string;
        minCount: string;
        maxCount: string;
        regex: string;
        surveyvalidator: {
            text: string;
            expression: string;
        };
        totalText: string;
        totalType: string;
        totalExpression: string;
        totalDisplayStyle: string;
        totalCurrency: string;
        totalFormat: string;
        logo: string;
        questionsOnPageMode: string;
        maxTextLength: string;
        maxOthersLength: string;
        autoGrowComment: string;
        allowResizeComment: string;
        textUpdateMode: string;
        focusOnFirstError: string;
        checkErrorsMode: string;
        navigateToUrl: string;
        navigateToUrlOnCondition: string;
        completedBeforeHtml: string;
        completedHtml: string;
        completedHtmlOnCondition: string;
        loadingHtml: string;
        commentText: string;
        autocomplete: string;
        labelTrue: string;
        labelFalse: string;
        allowClear: string;
        displayStyle: string;
        format: string;
        maximumFractionDigits: string;
        minimumFractionDigits: string;
        useGrouping: string;
        allowMultiple: string;
        allowImagesPreview: string;
        acceptedTypes: string;
        waitForUpload: string;
        needConfirmRemoveFile: string;
        detailPanelMode: string;
        minRowCount: string;
        maxRowCount: string;
        confirmDelete: string;
        confirmDeleteText: string;
        paneldynamic: {
            confirmDelete: string;
        };
        panelCount: string;
        minPanelCount: string;
        maxPanelCount: string;
        panelsState: string;
        templateDescription: string;
        templateTitle: string;
        panelPrevText: string;
        panelNextText: string;
        showRangeInProgress: string;
        templateTitleLocation: string;
        panelRemoveButtonLocation: string;
        hideIfRowsEmpty: string;
        hideColumnsIfEmpty: string;
        rateValues: string;
        rateCount: string;
        autoGenerate: string;
        hideIfChoicesEmpty: string;
        hideNumber: string;
        minWidth: string;
        maxWidth: string;
        width: string;
        showHeader: string;
        horizontalScroll: string;
        columnMinWidth: string;
        rowTitleWidth: string;
        valueTrue: string;
        valueFalse: string;
        minErrorText: string;
        maxErrorText: string;
        otherErrorText: string;
        keyDuplicationError: string;
        minSelectedChoices: string;
        maxSelectedChoices: string;
        showClearButton: string;
        showNumber: string;
        logoWidth: string;
        logoHeight: string;
        readOnly: string;
        enableIf: string;
        emptyRowsText: string;
        size: string;
        separateSpecialChoices: string;
        choicesFromQuestion: string;
        choicesFromQuestionMode: string;
        showCommentArea: string;
        commentPlaceholder: string;
        displayRateDescriptionsAsExtremeItems: string;
        rowsOrder: string;
        columnsLayout: string;
        columnColCount: string;
        state: string;
        correctAnswer: string;
        defaultPanelValue: string;
        cells: string;
        keyName: string;
        itemvalue: {
            text: string;
        };
        logoPosition: string;
        addLogo: string;
        changeLogo: string;
        logoPositions: {
            none: string;
            left: string;
            right: string;
            top: string;
            bottom: string;
        };
        tabs: {
            general: string;
            fileOptions: string;
            html: string;
            columns: string;
            rows: string;
            choices: string;
            items: string;
            visibleIf: string;
            enableIf: string;
            requiredIf: string;
            rateValues: string;
            choicesByUrl: string;
            matrixChoices: string;
            multipleTextItems: string;
            numbering: string;
            validators: string;
            navigation: string;
            question: string;
            pages: string;
            timer: string;
            calculatedValues: string;
            triggers: string;
            templateTitle: string;
            totals: string;
            logic: string;
            layout: string;
            data: string;
            validation: string;
            cells: string;
            showOnCompleted: string;
            logo: string;
            slider: string;
            expression: string;
            others: string;
        };
        editProperty: string;
        items: string;
        choicesVisibleIf: string;
        choicesEnableIf: string;
        columnsEnableIf: string;
        rowsEnableIf: string;
        indent: string;
        panel: {
            indent: string;
        };
        innerIndent: string;
        defaultValueFromLastRow: string;
        defaultValueFromLastPanel: string;
        enterNewValue: string;
        noquestions: string;
        createtrigger: string;
        titleKeyboardAdornerTip: string;
        keyboardAdornerTip: string;
        triggerOn: string;
        triggerMakePagesVisible: string;
        triggerMakeQuestionsVisible: string;
        triggerCompleteText: string;
        triggerNotSet: string;
        triggerRunIf: string;
        triggerSetToName: string;
        triggerFromName: string;
        triggerRunExpression: string;
        triggerSetValue: string;
        triggerGotoName: string;
        triggerIsVariable: string;
        triggerRunExpressionEmpty: string;
        emptyExpressionPlaceHolder: string;
        noFile: string;
        clearIfInvisible: string;
        valuePropertyName: string;
        searchEnabled: string;
        hideSelectedItems: string;
        closeOnSelect: string;
        signatureWidth: string;
        signatureHeight: string;
        verticalAlign: string;
        alternateRows: string;
        columnsVisibleIf: string;
        rowsVisibleIf: string;
        otherPlaceholder: string;
        signaturepad: {
            showPlaceholder: string;
            placeholder: string;
            signatureWidth: string;
            signatureHeight: string;
            signatureAutoScaleEnabled: string;
            penMinWidth: string;
            penMaxWidth: string;
        };
        filePlaceholder: string;
        photoPlaceholder: string;
        fileOrPhotoPlaceholder: string;
        rateType: string;
    };
    pv: {
        true: string;
        false: string;
        file: string;
        camera: string;
        "file-camera": string;
        inherit: string;
        show: string;
        hide: string;
        default: string;
        initial: string;
        random: string;
        collapsed: string;
        expanded: string;
        none: string;
        asc: string;
        desc: string;
        indeterminate: string;
        decimal: string;
        currency: string;
        percent: string;
        firstExpanded: string;
        off: string;
        onpanel: string;
        onPanel: string;
        onSurvey: string;
        list: string;
        progressTop: string;
        progressBottom: string;
        progressTopBottom: string;
        tab: string;
        horizontal: string;
        vertical: string;
        top: string;
        bottom: string;
        topBottom: string;
        both: string;
        left: string;
        right: string;
        color: string;
        date: string;
        datetime: string;
        "datetime-local": string;
        email: string;
        month: string;
        number: string;
        password: string;
        range: string;
        tel: string;
        text: string;
        time: string;
        url: string;
        week: string;
        hidden: string;
        on: string;
        onPage: string;
        edit: string;
        display: string;
        onComplete: string;
        onHidden: string;
        onHiddenContainer: string;
        clearInvisibleValues: {
            none: string;
        };
        inputType: {
            color: string;
            date: string;
            "datetime-local": string;
            email: string;
            month: string;
            number: string;
            password: string;
            range: string;
            tel: string;
            text: string;
            time: string;
            url: string;
            week: string;
        };
        all: string;
        page: string;
        survey: string;
        onNextPage: string;
        onValueChanged: string;
        onValueChanging: string;
        standard: string;
        singlePage: string;
        questionPerPage: string;
        noPreview: string;
        showAllQuestions: string;
        showAnsweredQuestions: string;
        pages: string;
        questions: string;
        requiredQuestions: string;
        correctQuestions: string;
        buttons: string;
        underInput: string;
        underTitle: string;
        onBlur: string;
        onTyping: string;
        underRow: string;
        underRowSingle: string;
        showNavigationButtons: {
            none: string;
        };
        showProgressBar: {
            off: string;
        };
        showTimerPanel: {
            none: string;
        };
        showTimerPanelMode: {
            all: string;
        };
        detailPanelMode: {
            none: string;
        };
        addRowLocation: {
            default: string;
        };
        panelsState: {
            default: string;
            collapsed: string;
            expanded: string;
        };
        widthMode: {
            auto: string;
            static: string;
            responsive: string;
        };
        imageFit: {
            none: string;
            contain: string;
            cover: string;
            fill: string;
        };
        contentMode: {
            auto: string;
            image: string;
            video: string;
            youtube: string;
        };
        displayMode: {
            auto: string;
            buttons: string;
            dropdown: string;
        };
        rateColorMode: {
            default: string;
        };
        autoGenerate: {
            true: string;
            false: string;
        };
        rateType: {
            labels: string;
            stars: string;
            smileys: string;
        };
    };
    op: {
        empty: string;
        notempty: string;
        equal: string;
        notequal: string;
        contains: string;
        notcontains: string;
        anyof: string;
        allof: string;
        greater: string;
        less: string;
        greaterorequal: string;
        lessorequal: string;
        and: string;
        or: string;
    };
    ew: {
        angular: string;
        jquery: string;
        knockout: string;
        react: string;
        vue: string;
        bootstrap: string;
        modern: string;
        default: string;
        orange: string;
        darkblue: string;
        darkrose: string;
        stone: string;
        winter: string;
        winterstone: string;
        showOnPage: string;
        showInWindow: string;
        loadFromServer: string;
        titleScript: string;
        titleHtml: string;
        titleJavaScript: string;
    };
    ts: {
        selectPage: string;
        showInvisibleElements: string;
        hideInvisibleElements: string;
    };
    validators: {
        answercountvalidator: string;
        emailvalidator: string;
        expressionvalidator: string;
        numericvalidator: string;
        regexvalidator: string;
        textvalidator: string;
    };
    triggers: {
        completetrigger: string;
        setvaluetrigger: string;
        copyvaluetrigger: string;
        skiptrigger: string;
        runexpressiontrigger: string;
        visibletrigger: string;
    };
    pehelp: {
        cookieName: string;
        size: string;
        format: string;
        totalText: string;
        acceptedTypes: string;
        columnColCount: string;
        autocomplete: string;
        valueName: string;
        choicesbyurl: {
            valueName: string;
        };
        keyName: string;
        filePlaceholder: string;
        photoPlaceholder: string;
        fileOrPhotoPlaceholder: string;
    };
    p: {
        title: {
            name: string;
            title: string;
        };
        multiSelect: string;
        showLabel: string;
        value: string;
        tabAlign: string;
        description: string;
        logoFit: string;
        pages: string;
        questions: string;
        triggers: string;
        calculatedValues: string;
        surveyId: string;
        surveyPostId: string;
        surveyShowDataSaving: string;
        questionDescriptionLocation: string;
        progressBarType: string;
        showTOC: string;
        tocLocation: string;
        questionTitlePattern: string;
        widthMode: string;
        showBrandInfo: string;
        useDisplayValuesInDynamicTexts: string;
        visibleIf: string;
        titleLocation: string;
        descriptionLocation: string;
        defaultValueExpression: string;
        requiredIf: string;
        resetValueIf: string;
        setValueIf: string;
        validators: string;
        bindings: string;
        renderAs: string;
        attachOriginalItems: string;
        choices: string;
        choicesByUrl: string;
        currency: string;
        cellHint: string;
        isUnique: string;
        showInMultipleColumns: string;
        totalMaximumFractionDigits: string;
        totalMinimumFractionDigits: string;
        columns: string;
        detailElements: string;
        allowAdaptiveActions: string;
        defaultRowValue: string;
        detailPanelShowOnAdding: string;
        choicesLazyLoadEnabled: string;
        choicesLazyLoadPageSize: string;
        inputFieldComponent: string;
        itemComponent: string;
        min: string;
        max: string;
        minValueExpression: string;
        maxValueExpression: string;
        step: string;
        dataList: string;
        itemSize: string;
        elements: string;
        content: string;
        navigationButtonsVisibility: string;
        navigationTitle: string;
        navigationDescription: string;
        longTap: string;
        autoGrow: string;
        allowResize: string;
        acceptCarriageReturn: string;
        displayMode: string;
        rateType: string;
        label: string;
        contentMode: string;
        imageFit: string;
        altText: string;
        height: string;
        penColor: string;
        backgroundColor: string;
        templateElements: string;
        operator: string;
        isVariable: string;
        runExpression: string;
        showCaption: string;
        iconName: string;
        iconSize: string;
        precision: string;
        matrixDragHandleArea: string;
        backgroundImage: string;
        backgroundImageFit: string;
        backgroundImageAttachment: string;
        backgroundOpacity: string;
        selectToRankEnabled: string;
        selectToRankAreasLayout: string;
        allowCameraAccess: string;
        scaleColorMode: string;
        rateColorMode: string;
        templateTabTitle: string;
        templateVisibleIf: string;
        copyDisplayValue: string;
    };
    theme: {
        "--background": string;
        "--background-dim-light": string;
        "--primary-foreground": string;
        "--foreground": string;
        "--base-unit": string;
        groupGeneral: string;
        groupAdvanced: string;
        groupHeader: string;
        groupBackground: string;
        groupAppearance: string;
        themeName: string;
        themeMode: string;
        themeModePanels: string;
        themeModeLightweight: string;
        themePaletteLight: string;
        themePaletteDark: string;
        primaryColor: string;
        primaryDefaultColor: string;
        primaryDarkColor: string;
        primaryLightColor: string;
        coverTitleForecolor: string;
        coverDescriptionForecolor: string;
        coverOverlapEnabled: string;
        backgroundDimColor: string;
        backgroundImage: string;
        backgroundImageFitAuto: string;
        backgroundImageFitCover: string;
        backgroundImageFitContain: string;
        backgroundImageFitFill: string;
        backgroundImageFitTile: string;
        backgroundOpacity: string;
        backgroundImageAttachmentFixed: string;
        backgroundImageAttachmentScroll: string;
        panelBackgroundTransparency: string;
        questionBackgroundTransparency: string;
        questionPanel: string;
        questionTitle: string;
        questionDescription: string;
        editorPanel: string;
        editorFont: string;
        backcolor: string;
        hovercolor: string;
        borderDecoration: string;
        accentBackground: string;
        accentForeground: string;
        primaryForecolor: string;
        primaryForecolorLight: string;
        linesColors: string;
        borderDefault: string;
        borderLight: string;
        fontFamily: string;
        fontSize: string;
        color: string;
        placeholderColor: string;
        size: string;
        fontWeightRegular: string;
        fontWeightHeavy: string;
        fontWeightSemiBold: string;
        fontWeightBold: string;
        scale: string;
        cornerRadius: string;
        surveyTitle: string;
        surveyDescription: string;
        pageTitle: string;
        pageDescription: string;
        boxShadowX: string;
        boxShadowY: string;
        boxShadowAddRule: string;
        opacity: string;
        boxShadowBlur: string;
        boxShadowSpread: string;
        boxShadowDrop: string;
        boxShadowInner: string;
        questionShadow: string;
        editorShadow: string;
        headerView: string;
        headerViewBasic: string;
        headerViewAdvanced: string;
        coverInheritWidthFrom: string;
        coverInheritWidthFromSurvey: string;
        coverInheritWidthFromContainer: string;
        coverTextAreaWidth: string;
        coverBackgroundColorSwitch: string;
        coverBackgroundColorNone: string;
        coverBackgroundColorAccentColor: string;
        coverBackgroundColorCustom: string;
        horizontalAlignmentLeft: string;
        horizontalAlignmentCenter: string;
        horizontalAlignmentRight: string;
        verticalAlignmentTop: string;
        verticalAlignmentMiddle: string;
        verticalAlignmentBottom: string;
        logoPosition: string;
        coverTitlePosition: string;
        coverDescriptionPosition: string;
        names: {
            default: string;
            sharp: string;
            borderless: string;
            flat: string;
            plain: string;
            doubleborder: string;
            layered: string;
            solid: string;
            threedimensional: string;
            contrast: string;
        };
        colors: {
            teal: string;
            blue: string;
            purple: string;
            orchid: string;
            tulip: string;
            brown: string;
            green: string;
        };
    };
};
